<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:annotation-config/>

    <context:component-scan base-package="com.yxtec.t6">
        <context:exclude-filter type="regex" expression="com.yxtec.t6.web.*"/>
    </context:component-scan>

    <context:property-placeholder location="classpath:t6.properties"/>

    <!--Atomikos数据源Bean-->
    <bean id="atomikosDataSourceBean" class="com.atomikos.jdbc.AtomikosDataSourceBean">
        <property name="xaProperties">
            <props>
                <prop key="url">${db.url}</prop>
                <prop key="user">${db.user}</prop>
                <prop key="password">${db.password}</prop>
            </props>
        </property>
        <property name="xaDataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource"/>
        <property name="uniqueResourceName" value="ds1"/>
    </bean>

    <!--SpringJDBC-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="atomikosDataSourceBean"/>
    </bean>

    <!--Spring事务管理器底层指定的Atomikos事务管理器，支持分布式事务，2PC-->
    <bean id="userTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager">
        <property name="forceShutdown" value="true"/>
    </bean>

    <!--Spring事务管理器-->
    <bean id="jtaTransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="userTransactionManager"/>
    </bean>

    <!--ActiveMQ连接工厂-->
    <bean id="activeMQXAConnectionFactory" class="org.apache.activemq.ActiveMQXAConnectionFactory">
        <property name="brokerURL" value="${mq.brokerURL}"/>
        <property name="alwaysSessionAsync" value="false"/>
        <property name="alwaysSyncSend" value="true"/>
    </bean>

    <!--Atomikos连接工厂Bean，支持分布式事务，2PC -->
    <bean id="atomikosConnectionFactoryBean" class="com.atomikos.jms.AtomikosConnectionFactoryBean">
        <property name="xaConnectionFactory" ref="activeMQXAConnectionFactory"/>
        <property name="localTransactionMode" value="false"/>
        <property name="uniqueResourceName" value="jms1"/>
    </bean>

    <!--Spring JmsTemplate-->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="atomikosConnectionFactoryBean"/>
        <property name="pubSubDomain" value="false"/>
    </bean>

    <!--Queue-->
    <bean id="activeMQQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="scores"/>
    </bean>

    <!--Gson-->
    <bean id="gson" class="com.google.gson.Gson"/>


    <!--&lt;!&ndash;数据源&ndash;&gt;-->
    <!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">-->
    <!--<property name="dbType" value="${db.type}"/>-->
    <!--<property name="url" value="${db.url}"/>-->
    <!--<property name="username" value="${db.user}"/>-->
    <!--<property name="password" value="${db.password}"/>-->
    <!--<property name="maxActive" value="5"/>-->
    <!--<property name="initialSize" value="1"/>-->
    <!--<property name="maxWait" value="60000"/>-->
    <!--<property name="minIdle" value="1"/>-->
    <!--<property name="timeBetweenEvictionRunsMillis" value="3000"/>-->
    <!--&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
    <!--<property name="minEvictableIdleTimeMillis" value="300000"/>-->
    <!--&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
    <!--<property name="validationQuery" value="SELECT 'x'"/>-->
    <!--<property name="testWhileIdle" value="true"/>-->
    <!--<property name="testOnBorrow" value="false"/>-->
    <!--<property name="testOnReturn" value="false"/>-->
    <!--&lt;!&ndash; 打开PSCache，并且指定每个连接上PSCache的大小 &ndash;&gt;-->
    <!--<property name="poolPreparedStatements" value="true"/>-->
    <!--<property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>-->
    <!--&lt;!&ndash; 关闭长时间不使用的连接 &ndash;&gt;-->
    <!--<property name="removeAbandoned" value="true"/>-->
    <!--&lt;!&ndash; 打开removeAbandoned功能 &ndash;&gt;-->
    <!--<property name="removeAbandonedTimeout" value="1800"/>-->
    <!--&lt;!&ndash; 1800秒，也就是30分钟 &ndash;&gt;-->
    <!--<property name="logAbandoned" value="true"/>-->
    <!--&lt;!&ndash; 关闭abanded连接时输出错误日志 &ndash;&gt;-->
    <!--</bean>-->

    <!--事务注解使用的事务管理器-->
    <tx:annotation-driven transaction-manager="jtaTransactionManager"/>

</beans>